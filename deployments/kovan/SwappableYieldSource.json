{
  "address": "0x0B0Bdc9F11Bc4Ed33dD3Ebf43bcAdAC9d7F1b98D",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "yieldSource",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "SwappableYieldSourceInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldYieldSource",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newYieldSource",
          "type": "address"
        }
      ],
      "name": "SwappedYieldSource",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "balanceOfToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IYieldSource",
          "name": "_yieldSource",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeemToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "supplyTokenTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newYieldSource",
          "type": "address"
        }
      ],
      "name": "swapYieldSource",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yieldSource",
      "outputs": [
        {
          "internalType": "contract IYieldSource",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6488ac4614f03e63077ddf00f1e85fcccf782d7115a9c3ee0c6d71300b765b42",
  "receipt": {
    "to": null,
    "from": "0x3A791e828fDd420fbE16416efDF509E4b9088Dd4",
    "contractAddress": "0x0B0Bdc9F11Bc4Ed33dD3Ebf43bcAdAC9d7F1b98D",
    "transactionIndex": 12,
    "gasUsed": "1087286",
    "logsBloom": "0x
    "blockHash": "0xbe19fa905c7925b9b5221eba375e25016cd2aa9ca3b846c30001c65960c843f6",
    "transactionHash": "0x6488ac4614f03e63077ddf00f1e85fcccf782d7115a9c3ee0c6d71300b765b42",
    "logs": [],
    "blockNumber": 25341373,
    "cumulativeGasUsed": "6146514",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "61aa8ea91286d2a22037ed193c97df3c",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"yieldSource\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SwappableYieldSourceInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldYieldSource\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newYieldSource\",\"type\":\"address\"}],\"name\":\"SwappedYieldSource\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IYieldSource\",\"name\":\"_yieldSource\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeemToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"supplyTokenTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newYieldSource\",\"type\":\"address\"}],\"name\":\"swapYieldSource\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldSource\",\"outputs\":[{\"internalType\":\"contract IYieldSource\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract adheres to the PoolTogether yield source interfaceThis contract inherits OwnableUpgradable\",\"kind\":\"dev\",\"methods\":{\"balanceOfToken(address)\":{\"returns\":{\"_0\":\"The underlying balance of asset tokens\"}},\"depositToken()\":{\"returns\":{\"_0\":\"The ERC20 asset token interface\"}},\"initialize(address,address)\":{\"params\":{\"_owner\":\"Swappable yield source owner\",\"_yieldSource\":\"Address of yield source used to initialize this swappable yield source\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"redeemToken(uint256)\":{\"params\":{\"amount\":\"The amount of `token()` to withdraw. Denominated in `token()` as above.\"},\"returns\":{\"_0\":\"The actual amount of tokens that were redeemed.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supplyTokenTo(uint256,address)\":{\"params\":{\"amount\":\"The amount of `token()` to be supplied\",\"to\":\"The user whose balance will receive the tokens\"}},\"swapYieldSource(address)\":{\"returns\":{\"_0\":\"True if operation is successful\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Swappable yield source contract to allow a PoolTogether prize pool to swap between different yield sources\",\"version\":1},\"userdoc\":{\"events\":{\"SwappableYieldSourceInitialized(address,address)\":{\"notice\":\"Emitted when the swappable yield source is initialized\"},\"SwappedYieldSource(address,address)\":{\"notice\":\"Emitted when yield source has been successfuly swapped\"}},\"kind\":\"user\",\"methods\":{\"balanceOfToken(address)\":{\"notice\":\"Returns the total balance (in asset tokens). This includes the deposits and interest.\"},\"depositToken()\":{\"notice\":\"Returns the ERC20 asset token used for deposits\"},\"initialize(address,address)\":{\"notice\":\"Initializes the swappable yield source with the yieldSource address provided\"},\"redeemToken(uint256)\":{\"notice\":\"Redeems tokens from the current yield source.\"},\"supplyTokenTo(uint256,address)\":{\"notice\":\"Supplies tokens to the current yield source. Allows assets to be supplied on other user's behalf using the `to` param.\"},\"swapYieldSource(address)\":{\"notice\":\"Swap yieldSource for newYieldSource\"},\"yieldSource()\":{\"notice\":\"Yield source interface\"}},\"notice\":\"Swappable yield source for a PoolTogether prize pool that generates yield by depositing into the specified yield source\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwappableYieldSource.sol\":\"SwappableYieldSource\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/Initializable.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xb419e68addcb82ecda3ad3974b0d2db76435ce9b08435a04d5b119a0c5d45ea5\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMathUpgradeable {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x0dd1e9b19801e3e7d900fbf4182d81e1afd23ad7be39504e33df6bbcba91d724\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity >=0.4.24 <0.8.0;\\n\\nimport \\\"../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || _isConstructor() || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /// @dev Returns true if and only if the function is running in the constructor\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xa1931c47a617014f858580db625aa0dcf343796f39acd4b5b51effc092a1f0a9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"../../math/SafeMathUpgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using SafeMathUpgradeable for uint256;\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20Upgradeable token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8457e15aa90badabe0d6ef6f572f1ebd47bebf156921c825ae6e009dda15b706\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\nimport \\\"../proxy/Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xbbf8a21b9a66c48d45ff771b8563c6df19ba451d63dfb8380a865c1e1f29d1a0\",\"license\":\"MIT\"},\"@pooltogether/yield-source-interface/contracts/IYieldSource.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.4.0 <0.8.0;\\n\\n/// @title Defines the functions used to interact with a yield source.  The Prize Pool inherits this contract.\\n/// @notice Prize Pools subclasses need to implement this interface so that yield can be generated.\\ninterface IYieldSource {\\n\\n  /// @notice Returns the ERC20 asset token used for deposits.\\n  /// @return The ERC20 asset token\\n  function depositToken() external view returns (address);\\n\\n  /// @notice Returns the total balance (in asset tokens).  This includes the deposits and interest.\\n  /// @return The underlying balance of asset tokens\\n  function balanceOfToken(address addr) external returns (uint256);\\n\\n  /// @notice Supplies tokens to the yield source.  Allows assets to be supplied on other user's behalf using the `to` param.\\n  /// @param amount The amount of `token()` to be supplied\\n  /// @param to The user whose balance will receive the tokens\\n  function supplyTokenTo(uint256 amount, address to) external;\\n\\n  /// @notice Redeems tokens from the yield source.\\n  /// @param amount The amount of `token()` to withdraw.  Denominated in `token()` as above.\\n  /// @return The actual amount of tokens that were redeemed.\\n  function redeemToken(uint256 amount) external returns (uint256);\\n\\n}\\n\",\"keccak256\":\"0xee862089c29ec1f9b2a1df7c01953d88ef5dfcfb2c2198e8926f692ec76537f1\",\"license\":\"MIT\"},\"contracts/SwappableYieldSource.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.7.6;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/SafeERC20Upgradeable.sol\\\";\\nimport \\\"@pooltogether/yield-source-interface/contracts/IYieldSource.sol\\\";\\n\\n/// @title Swappable yield source contract to allow a PoolTogether prize pool to swap between different yield sources\\n/// @dev This contract adheres to the PoolTogether yield source interface\\n/// @dev This contract inherits OwnableUpgradable\\n/// @notice Swappable yield source for a PoolTogether prize pool that generates yield by depositing into the specified yield source\\ncontract SwappableYieldSource is IYieldSource, OwnableUpgradeable {\\n  using SafeMathUpgradeable for uint256;\\n  using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n  /// @notice Emitted when the swappable yield source is initialized\\n  event SwappableYieldSourceInitialized(\\n    address indexed yieldSource,\\n    address indexed owner\\n  );\\n\\n  /// @notice Emitted when yield source has been successfuly swapped\\n  event SwappedYieldSource(\\n    address indexed oldYieldSource,\\n    address indexed newYieldSource\\n  );\\n\\n  /// @notice Yield source interface\\n  IYieldSource public yieldSource;\\n\\n  /// @notice Initializes the swappable yield source with the yieldSource address provided\\n  /// @param _yieldSource Address of yield source used to initialize this swappable yield source\\n  /// @param _owner Swappable yield source owner\\n  function initialize(\\n    IYieldSource _yieldSource,\\n    address _owner\\n  ) public initializer returns (bool) {\\n    yieldSource = _yieldSource;\\n\\n    // A hack to determine whether it's an actual yield source\\n    (bool succeeded,) = address(_yieldSource).staticcall(abi.encode(_yieldSource.depositToken.selector));\\n    require(succeeded, \\\"SwappableYieldSource/invalid-yield-source\\\");\\n\\n    __Ownable_init();\\n    transferOwnership(_owner);\\n\\n    emit SwappableYieldSourceInitialized(address(_yieldSource), _owner);\\n\\n    return true;\\n  }\\n\\n  /// @notice Returns the ERC20 asset token used for deposits\\n  /// @return The ERC20 asset token interface\\n  function depositToken() external view override returns (address) {\\n    return yieldSource.depositToken();\\n  }\\n\\n  /// @notice Returns the total balance (in asset tokens). This includes the deposits and interest.\\n  /// @return The underlying balance of asset tokens\\n  function balanceOfToken(address addr) external override returns (uint256) {\\n    return yieldSource.balanceOfToken(addr);\\n  }\\n\\n  /// @notice Supplies tokens to the current yield source. Allows assets to be supplied on other user's behalf using the `to` param.\\n  /// @param amount The amount of `token()` to be supplied\\n  /// @param to The user whose balance will receive the tokens\\n  function supplyTokenTo(uint256 amount, address to) external override {\\n    return yieldSource.supplyTokenTo(amount, to);\\n  }\\n\\n  /// @notice Redeems tokens from the current yield source.\\n  /// @param amount The amount of `token()` to withdraw. Denominated in `token()` as above.\\n  /// @return The actual amount of tokens that were redeemed.\\n  function redeemToken(uint256 amount) external override returns (uint256) {\\n    return yieldSource.redeemToken(amount);\\n  }\\n\\n  /// @notice Redeems token from yield source\\n  /// @dev redeemToken returns balanceDiff which is equivalent to the yield source balance before redeeming minus redeemAmount\\n  /// @return True if operation is successful and balanceDiff equals redeemAmount\\n  function _redeemFromYieldSource(uint256 redeemAmount) internal returns (bool) {\\n    require(yieldSource.redeemToken(redeemAmount) == redeemAmount, \\\"SwappableYieldSource/failed-to-withdraw\\\");\\n  }\\n\\n  /// @notice Supplies token to new yield source\\n  /// @return 0 if operation is successful\\n  function _supplyToNewYieldSource(uint256 supplyAmount, address newYieldSource) internal returns (uint256) {\\n    IERC20Upgradeable(yieldSource.depositToken()).safeApprove(newYieldSource, supplyAmount);\\n    IYieldSource(newYieldSource).supplyTokenTo(supplyAmount, address(this));\\n    return 0;\\n  }\\n\\n  /// @notice Swap yieldSource for newYieldSource\\n  /// @return True if operation is successful\\n  function swapYieldSource(address newYieldSource) external onlyOwner returns (bool) {\\n    uint256 balance = yieldSource.balanceOfToken(address(this));\\n    _redeemFromYieldSource(balance);\\n    require(_supplyToNewYieldSource(balance, newYieldSource) == 0, \\\"SwappableYieldSource/failed-to-swap\\\");\\n    emit SwappedYieldSource(address(yieldSource), newYieldSource);\\n\\n    return true;\\n  }\\n}\\n\",\"keccak256\":\"0xfc0249dcbe8d10827c64d1d878add201c02dea1465a6c25f6d2d7537be8609c7\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506112b5806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610170578063b2470e5c14610194578063b99152d01461019c578063c89039c5146101c2578063f2fde38b146101ca5761009e565b8063013054c2146100a3578063485cc955146100d2578063715018a61461011457806375bed0be1461011e57806387a6eeef14610144575b600080fd5b6100c0600480360360208110156100b957600080fd5b50356101f0565b60408051918252519081900360200190f35b610100600480360360408110156100e857600080fd5b506001600160a01b0381358116916020013516610270565b604080519115158252519081900360200190f35b61011c610485565b005b6101006004803603602081101561013457600080fd5b50356001600160a01b0316610543565b61011c6004803603604081101561015a57600080fd5b50803590602001356001600160a01b03166106c6565b610178610737565b604080516001600160a01b039092168252519081900360200190f35b610178610746565b6100c0600480360360208110156101b257600080fd5b50356001600160a01b0316610755565b6101786107a7565b61011c600480360360208110156101e057600080fd5b50356001600160a01b031661081d565b6065546040805162982a6160e11b81526004810184905290516000926001600160a01b03169163013054c291602480830192602092919082900301818787803b15801561023c57600080fd5b505af1158015610250573d6000803e3d6000fd5b505050506040513d602081101561026657600080fd5b505190505b919050565b60008054610100900460ff168061028a575061028a610932565b80610298575060005460ff16155b6102d35760405162461bcd60e51b815260040180806020018281038252602e8152602001806111cb602e913960400191505060405180910390fd5b600054610100900460ff161580156102fe576000805460ff1961ff0019909116610100171660011790555b606580546001600160a01b0319166001600160a01b0386169081179091556040805163c89039c560e01b60208083019190915282518083038201815291830192839052815160009493918291908401908083835b602083106103715780518252601f199092019160209182019101610352565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146103d1576040519150601f19603f3d011682016040523d82523d6000602084013e6103d6565b606091505b50509050806104165760405162461bcd60e51b81526004018080602001828103825260298152602001806111596029913960400191505060405180910390fd5b61041e610943565b6104278461081d565b836001600160a01b0316856001600160a01b03167f9dfd54995b6048d5089d7fc18cb2c6516de43832f6e702c7f5d552684a034bef60405160405180910390a36001925050801561047e576000805461ff00191690555b5092915050565b61048d6109f5565b6001600160a01b031661049e610737565b6001600160a01b0316146104f9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b600061054d6109f5565b6001600160a01b031661055e610737565b6001600160a01b0316146105b9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60655460408051630b99152d60e41b815230600482015290516000926001600160a01b03169163b99152d091602480830192602092919082900301818787803b15801561060557600080fd5b505af1158015610619573d6000803e3d6000fd5b505050506040513d602081101561062f57600080fd5b5051905061063c816109f9565b506106478184610ab2565b156106835760405162461bcd60e51b81526004018080602001828103825260238152602001806111826023913960400191505060405180910390fd5b6065546040516001600160a01b038086169216907f43202f183369279f11696950d98fef59b0d8aac452bc981523330112621b63c390600090a350600192915050565b606554604080516387a6eeef60e01b8152600481018590526001600160a01b038481166024830152915191909216916387a6eeef91604480830192600092919082900301818387803b15801561071b57600080fd5b505af115801561072f573d6000803e3d6000fd5b505050505050565b6033546001600160a01b031690565b6065546001600160a01b031681565b60655460408051630b99152d60e41b81526001600160a01b0384811660048301529151600093929092169163b99152d09160248082019260209290919082900301818787803b15801561023c57600080fd5b6065546040805163c89039c560e01b815290516000926001600160a01b03169163c89039c5916004808301926020929190829003018186803b1580156107ec57600080fd5b505afa158015610800573d6000803e3d6000fd5b505050506040513d602081101561081657600080fd5b5051905090565b6108256109f5565b6001600160a01b0316610836610737565b6001600160a01b031614610891576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166108d65760405162461bcd60e51b81526004018080602001828103825260268152602001806111336026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600061093d30610bb2565b15905090565b600054610100900460ff168061095c575061095c610932565b8061096a575060005460ff16155b6109a55760405162461bcd60e51b815260040180806020018281038252602e8152602001806111cb602e913960400191505060405180910390fd5b600054610100900460ff161580156109d0576000805460ff1961ff0019909116610100171660011790555b6109d8610bb8565b6109e0610c58565b80156109f2576000805461ff00191690555b50565b3390565b6065546040805162982a6160e11b815260048101849052905160009284926001600160a01b039091169163013054c29160248082019260209290919082900301818887803b158015610a4a57600080fd5b505af1158015610a5e573d6000803e3d6000fd5b505050506040513d6020811015610a7457600080fd5b50511461026b5760405162461bcd60e51b81526004018080602001828103825260278152602001806111f96027913960400191505060405180910390fd5b6000610b438284606560009054906101000a90046001600160a01b03166001600160a01b031663c89039c56040518163ffffffff1660e01b815260040160206040518083038186803b158015610b0757600080fd5b505afa158015610b1b573d6000803e3d6000fd5b505050506040513d6020811015610b3157600080fd5b50516001600160a01b03169190610d51565b604080516387a6eeef60e01b81526004810185905230602482015290516001600160a01b038416916387a6eeef91604480830192600092919082900301818387803b158015610b9157600080fd5b505af1158015610ba5573d6000803e3d6000fd5b5060009695505050505050565b3b151590565b600054610100900460ff1680610bd15750610bd1610932565b80610bdf575060005460ff16155b610c1a5760405162461bcd60e51b815260040180806020018281038252602e8152602001806111cb602e913960400191505060405180910390fd5b600054610100900460ff161580156109e0576000805460ff1961ff00199091166101001716600117905580156109f2576000805461ff001916905550565b600054610100900460ff1680610c715750610c71610932565b80610c7f575060005460ff16155b610cba5760405162461bcd60e51b815260040180806020018281038252602e8152602001806111cb602e913960400191505060405180910390fd5b600054610100900460ff16158015610ce5576000805460ff1961ff0019909116610100171660011790555b6000610cef6109f5565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156109f2576000805461ff001916905550565b801580610dd7575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015610da957600080fd5b505afa158015610dbd573d6000803e3d6000fd5b505050506040513d6020811015610dd357600080fd5b5051155b610e125760405162461bcd60e51b815260040180806020018281038252603681526020018061124a6036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052610e64908490610e69565b505050565b6000610ebe826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f1a9092919063ffffffff16565b805190915015610e6457808060200190516020811015610edd57600080fd5b5051610e645760405162461bcd60e51b815260040180806020018281038252602a815260200180611220602a913960400191505060405180910390fd5b6060610f298484600085610f33565b90505b9392505050565b606082471015610f745760405162461bcd60e51b81526004018080602001828103825260268152602001806111a56026913960400191505060405180910390fd5b610f7d85610bb2565b610fce576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b6020831061100c5780518252601f199092019160209182019101610fed565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461106e576040519150601f19603f3d011682016040523d82523d6000602084013e611073565b606091505b509150915061108382828661108e565b979650505050505050565b6060831561109d575081610f2c565b8251156110ad5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156110f75781810151838201526020016110df565b50505050905090810190601f1680156111245780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373537761707061626c655969656c64536f757263652f696e76616c69642d7969656c642d736f75726365537761707061626c655969656c64536f757263652f6661696c65642d746f2d73776170416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564537761707061626c655969656c64536f757263652f6661696c65642d746f2d77697468647261775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a2646970667358221220f1d1b11b733c39100708a329e47778be0824bf91368b8808b42182fb4836998964736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610170578063b2470e5c14610194578063b99152d01461019c578063c89039c5146101c2578063f2fde38b146101ca5761009e565b8063013054c2146100a3578063485cc955146100d2578063715018a61461011457806375bed0be1461011e57806387a6eeef14610144575b600080fd5b6100c0600480360360208110156100b957600080fd5b50356101f0565b60408051918252519081900360200190f35b610100600480360360408110156100e857600080fd5b506001600160a01b0381358116916020013516610270565b604080519115158252519081900360200190f35b61011c610485565b005b6101006004803603602081101561013457600080fd5b50356001600160a01b0316610543565b61011c6004803603604081101561015a57600080fd5b50803590602001356001600160a01b03166106c6565b610178610737565b604080516001600160a01b039092168252519081900360200190f35b610178610746565b6100c0600480360360208110156101b257600080fd5b50356001600160a01b0316610755565b6101786107a7565b61011c600480360360208110156101e057600080fd5b50356001600160a01b031661081d565b6065546040805162982a6160e11b81526004810184905290516000926001600160a01b03169163013054c291602480830192602092919082900301818787803b15801561023c57600080fd5b505af1158015610250573d6000803e3d6000fd5b505050506040513d602081101561026657600080fd5b505190505b919050565b60008054610100900460ff168061028a575061028a610932565b80610298575060005460ff16155b6102d35760405162461bcd60e51b815260040180806020018281038252602e8152602001806111cb602e913960400191505060405180910390fd5b600054610100900460ff161580156102fe576000805460ff1961ff0019909116610100171660011790555b606580546001600160a01b0319166001600160a01b0386169081179091556040805163c89039c560e01b60208083019190915282518083038201815291830192839052815160009493918291908401908083835b602083106103715780518252601f199092019160209182019101610352565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146103d1576040519150601f19603f3d011682016040523d82523d6000602084013e6103d6565b606091505b50509050806104165760405162461bcd60e51b81526004018080602001828103825260298152602001806111596029913960400191505060405180910390fd5b61041e610943565b6104278461081d565b836001600160a01b0316856001600160a01b03167f9dfd54995b6048d5089d7fc18cb2c6516de43832f6e702c7f5d552684a034bef60405160405180910390a36001925050801561047e576000805461ff00191690555b5092915050565b61048d6109f5565b6001600160a01b031661049e610737565b6001600160a01b0316146104f9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b600061054d6109f5565b6001600160a01b031661055e610737565b6001600160a01b0316146105b9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60655460408051630b99152d60e41b815230600482015290516000926001600160a01b03169163b99152d091602480830192602092919082900301818787803b15801561060557600080fd5b505af1158015610619573d6000803e3d6000fd5b505050506040513d602081101561062f57600080fd5b5051905061063c816109f9565b506106478184610ab2565b156106835760405162461bcd60e51b81526004018080602001828103825260238152602001806111826023913960400191505060405180910390fd5b6065546040516001600160a01b038086169216907f43202f183369279f11696950d98fef59b0d8aac452bc981523330112621b63c390600090a350600192915050565b606554604080516387a6eeef60e01b8152600481018590526001600160a01b038481166024830152915191909216916387a6eeef91604480830192600092919082900301818387803b15801561071b57600080fd5b505af115801561072f573d6000803e3d6000fd5b505050505050565b6033546001600160a01b031690565b6065546001600160a01b031681565b60655460408051630b99152d60e41b81526001600160a01b0384811660048301529151600093929092169163b99152d09160248082019260209290919082900301818787803b15801561023c57600080fd5b6065546040805163c89039c560e01b815290516000926001600160a01b03169163c89039c5916004808301926020929190829003018186803b1580156107ec57600080fd5b505afa158015610800573d6000803e3d6000fd5b505050506040513d602081101561081657600080fd5b5051905090565b6108256109f5565b6001600160a01b0316610836610737565b6001600160a01b031614610891576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166108d65760405162461bcd60e51b81526004018080602001828103825260268152602001806111336026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600061093d30610bb2565b15905090565b600054610100900460ff168061095c575061095c610932565b8061096a575060005460ff16155b6109a55760405162461bcd60e51b815260040180806020018281038252602e8152602001806111cb602e913960400191505060405180910390fd5b600054610100900460ff161580156109d0576000805460ff1961ff0019909116610100171660011790555b6109d8610bb8565b6109e0610c58565b80156109f2576000805461ff00191690555b50565b3390565b6065546040805162982a6160e11b815260048101849052905160009284926001600160a01b039091169163013054c29160248082019260209290919082900301818887803b158015610a4a57600080fd5b505af1158015610a5e573d6000803e3d6000fd5b505050506040513d6020811015610a7457600080fd5b50511461026b5760405162461bcd60e51b81526004018080602001828103825260278152602001806111f96027913960400191505060405180910390fd5b6000610b438284606560009054906101000a90046001600160a01b03166001600160a01b031663c89039c56040518163ffffffff1660e01b815260040160206040518083038186803b158015610b0757600080fd5b505afa158015610b1b573d6000803e3d6000fd5b505050506040513d6020811015610b3157600080fd5b50516001600160a01b03169190610d51565b604080516387a6eeef60e01b81526004810185905230602482015290516001600160a01b038416916387a6eeef91604480830192600092919082900301818387803b158015610b9157600080fd5b505af1158015610ba5573d6000803e3d6000fd5b5060009695505050505050565b3b151590565b600054610100900460ff1680610bd15750610bd1610932565b80610bdf575060005460ff16155b610c1a5760405162461bcd60e51b815260040180806020018281038252602e8152602001806111cb602e913960400191505060405180910390fd5b600054610100900460ff161580156109e0576000805460ff1961ff00199091166101001716600117905580156109f2576000805461ff001916905550565b600054610100900460ff1680610c715750610c71610932565b80610c7f575060005460ff16155b610cba5760405162461bcd60e51b815260040180806020018281038252602e8152602001806111cb602e913960400191505060405180910390fd5b600054610100900460ff16158015610ce5576000805460ff1961ff0019909116610100171660011790555b6000610cef6109f5565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156109f2576000805461ff001916905550565b801580610dd7575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015610da957600080fd5b505afa158015610dbd573d6000803e3d6000fd5b505050506040513d6020811015610dd357600080fd5b5051155b610e125760405162461bcd60e51b815260040180806020018281038252603681526020018061124a6036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052610e64908490610e69565b505050565b6000610ebe826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f1a9092919063ffffffff16565b805190915015610e6457808060200190516020811015610edd57600080fd5b5051610e645760405162461bcd60e51b815260040180806020018281038252602a815260200180611220602a913960400191505060405180910390fd5b6060610f298484600085610f33565b90505b9392505050565b606082471015610f745760405162461bcd60e51b81526004018080602001828103825260268152602001806111a56026913960400191505060405180910390fd5b610f7d85610bb2565b610fce576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b6020831061100c5780518252601f199092019160209182019101610fed565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461106e576040519150601f19603f3d011682016040523d82523d6000602084013e611073565b606091505b509150915061108382828661108e565b979650505050505050565b6060831561109d575081610f2c565b8251156110ad5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156110f75781810151838201526020016110df565b50505050905090810190601f1680156111245780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373537761707061626c655969656c64536f757263652f696e76616c69642d7969656c642d736f75726365537761707061626c655969656c64536f757263652f6661696c65642d746f2d73776170416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564537761707061626c655969656c64536f757263652f6661696c65642d746f2d77697468647261775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a2646970667358221220f1d1b11b733c39100708a329e47778be0824bf91368b8808b42182fb4836998964736f6c63430007060033",
  "devdoc": {
    "details": "This contract adheres to the PoolTogether yield source interfaceThis contract inherits OwnableUpgradable",
    "kind": "dev",
    "methods": {
      "balanceOfToken(address)": {
        "returns": {
          "_0": "The underlying balance of asset tokens"
        }
      },
      "depositToken()": {
        "returns": {
          "_0": "The ERC20 asset token interface"
        }
      },
      "initialize(address,address)": {
        "params": {
          "_owner": "Swappable yield source owner",
          "_yieldSource": "Address of yield source used to initialize this swappable yield source"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "redeemToken(uint256)": {
        "params": {
          "amount": "The amount of `token()` to withdraw. Denominated in `token()` as above."
        },
        "returns": {
          "_0": "The actual amount of tokens that were redeemed."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "supplyTokenTo(uint256,address)": {
        "params": {
          "amount": "The amount of `token()` to be supplied",
          "to": "The user whose balance will receive the tokens"
        }
      },
      "swapYieldSource(address)": {
        "returns": {
          "_0": "True if operation is successful"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Swappable yield source contract to allow a PoolTogether prize pool to swap between different yield sources",
    "version": 1
  },
  "userdoc": {
    "events": {
      "SwappableYieldSourceInitialized(address,address)": {
        "notice": "Emitted when the swappable yield source is initialized"
      },
      "SwappedYieldSource(address,address)": {
        "notice": "Emitted when yield source has been successfuly swapped"
      }
    },
    "kind": "user",
    "methods": {
      "balanceOfToken(address)": {
        "notice": "Returns the total balance (in asset tokens). This includes the deposits and interest."
      },
      "depositToken()": {
        "notice": "Returns the ERC20 asset token used for deposits"
      },
      "initialize(address,address)": {
        "notice": "Initializes the swappable yield source with the yieldSource address provided"
      },
      "redeemToken(uint256)": {
        "notice": "Redeems tokens from the current yield source."
      },
      "supplyTokenTo(uint256,address)": {
        "notice": "Supplies tokens to the current yield source. Allows assets to be supplied on other user's behalf using the `to` param."
      },
      "swapYieldSource(address)": {
        "notice": "Swap yieldSource for newYieldSource"
      },
      "yieldSource()": {
        "notice": "Yield source interface"
      }
    },
    "notice": "Swappable yield source for a PoolTogether prize pool that generates yield by depositing into the specified yield source",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 492,
        "contract": "contracts/SwappableYieldSource.sol:SwappableYieldSource",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 495,
        "contract": "contracts/SwappableYieldSource.sol:SwappableYieldSource",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1130,
        "contract": "contracts/SwappableYieldSource.sol:SwappableYieldSource",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/SwappableYieldSource.sol:SwappableYieldSource",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 129,
        "contract": "contracts/SwappableYieldSource.sol:SwappableYieldSource",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 1199,
        "contract": "contracts/SwappableYieldSource.sol:SwappableYieldSource",
        "label": "yieldSource",
        "offset": 0,
        "slot": "101",
        "type": "t_contract(IYieldSource)1165"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IYieldSource)1165": {
        "encoding": "inplace",
        "label": "contract IYieldSource",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}